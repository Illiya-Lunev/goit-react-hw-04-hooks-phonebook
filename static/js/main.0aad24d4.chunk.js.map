{"version":3,"sources":["componets/FormPhoneBook/formPhone.module.css","componets/FormPhoneBook/FormPhoneBook.jsx","componets/ContactList/ContactItem.jsx","componets/ContactList/ContactList.jsx","componets/Filters/Filters.jsx","App.js","index.js","componets/ContactList/contacts.module.css","componets/Filters/filters.module.css"],"names":["module","exports","FormPhoneBook","state","name","number","nameId","uuidv4","numberId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","btn","Component","ContactItem","onDeleteContact","item","onClick","ContactList","contacts","list","map","Filter","filterId","App","filter","formSubmitHandler","data","find","contact","alert","prevState","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","handleContactsFilter","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aad24d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formPhone_form__2dQiS\",\"label\":\"formPhone_label__woOi-\",\"input\":\"formPhone_input__2oDdV\",\"btn\":\"formPhone_btn__d__DG\",\"title\":\"formPhone_title__3hhRU\"};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './formPhone.module.css'\n\nexport default class FormPhoneBook extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    \n  };\n\n  handleSubmit = e => {\n   e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n    \n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    \n\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            id={this.nameId}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и\n            пробелов. Например Adrian, Jacob Mercer, Charles de Batz de\n            Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberId}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberId}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">Add to contacts</button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\r\nimport s from './contacts.module.css'\r\n\r\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\r\n    return <li  className={s.item}>\r\n        <span className={s.name}>{name}</span>\r\n        <span className={s.name}>{number}</span>\r\n        <button className={s.btn} type=\"button\" onClick={() => onDeleteContact(id)} >Delete</button>\r\n    </li>\r\n\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\nimport s from './contacts.module.css'\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n contacts: PropTypes.array,\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './filters.module.css'\r\n\r\nexport default function Filter({ onChange, value }) {\r\n    const filterId = uuidv4();\r\n\r\n    return <>\r\n        <label className={s.label} htmlFor={filterId}> Find contacts by name:</label>\r\n        <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            id={filterId}\r\n            onChange={onChange}\r\n        />\r\n      \r\n    </>\r\n    \r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormPhoneBook from './componets/FormPhoneBook/FormPhoneBook.jsx';\nimport ContactList from './componets/ContactList/ContactList.jsx';\nimport Filter from './componets/Filters/Filters.jsx';\nimport s from './componets/FormPhoneBook/formPhone.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  // Добовляем в LocalStorage\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // Просматриваем/читаем в LocalStorege на странице\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  formSubmitHandler = data => {\n    if (this.state.contacts.find(contact => contact.name === data.name)) {\n      return alert(`${data.name} is alredy in contacts`);\n    } else {\n      data.id = uuidv4();\n      this.setState(prevState => {\n        return { contacts: [...prevState.contacts, data] };\n      });\n    }\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => {\n        return contact.id !== contactId;\n      }),\n    }));\n  };\n\n  handleContactsFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const { filter } = this.state;\n    return (\n      <div>\n        <h1 className={s.title}>Phonebook</h1>\n        <FormPhoneBook onSubmit={this.formSubmitHandler} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter onChange={this.handleContactsFilter} value={filter} />\n        <ContactList\n          onDeleteContact={this.deleteContact}\n          contacts={visibleContacts}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__2Cct5\",\"btn\":\"contacts_btn__277IA\",\"item\":\"contacts_item__2nk0S\",\"name\":\"contacts_name__27TN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filters_label__JttE_\",\"input\":\"filters_input__1mt7h\"};"],"sourceRoot":""}